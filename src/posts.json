{
    "posts": [
        {
            "title": "Switching Screens",
            "date": "6/30/2025",
            "summary": "My First Experience With Using React",
            "body": [
                "Hello,",
                "This is the first post of - hopefully - many. As the title suggests, creating this website has been my first proper interaction with react and typescript, and while my current understanding of the two is growing, I would like to share one of the struggles I faced while developing this website: switching between screens.",
                "I'll admit, at first I thought that this was going to be a simple task of using the a (or link) tag, but I discovered that most react websites are single page applications: the content may change, but the url remains constant. This effect is typically acheived through conditional rendering, and, attempting to learn the community standards, I decided to do this as well.",
                "That said, my first attempt involved managing state in the App component and passing the updater function to the child nodes as a property (prop) if needed. I was certain this would be fine, but I was greeted by an error message upon testing app: I could not call the updater function from anywhere that wasn't the app node specifically. According to a helpful stack overflow post, data in react only flows in one direction: from parent to child, so I needed to find a different solution.",
                "I initially assumed that calling a function that was in the App.tsx file in order to call the updater function managing the state in charge of the screens would not work. I figured the machine code would simplify down to equivilate my first attempted solution, thus resulting in an error. My next idea was to use a custom event and call the dispatch function in the child nodes as to trigger an event listener in the app node that would call the updater function and therefore switch screens.",
                "This ultimately worked and so I have decided upon keeping it, but I have heard that calling a seperate function to call the updater function does work (though I remain skeptical), which might be something to implement in the future. As of current projects, however, I am currently working on a random dungeon generator generator (an app to generate code that would generate a random dungeon), and you can expect an update soon on that.",
                "Thanks for reading - Fenton"
            ]
        }
    ]
}